DROP SEQUENCE UPLOAD_SEQ;
DROP SEQUENCE FILE_SEQ;
CREATE SEQUENCE UPLOAD_SEQ;
CREATE SEQUENCE FILE_SEQ;

DROP TABLE FILE_T;
DROP TABLE UPLOAD_T;

CREATE TABLE UPLOAD_T (
  UPLOAD_NO NUMBER NOT NULL,
  UPLOADER  VARCHAR2(100 BYTE),
  IP        VARCHAR2(50 BYTE),
  UPLOAD_DT DATE, 
  CONSTRAINT PK_UPLOAD PRIMARY KEY(UPLOAD_NO)
);

CREATE TABLE FILE_T (
  FILE_NO           NUMBER NOT NULL,
  UPLOAD_PATH       VARCHAR2(500 BYTE),
  ORIGINAL_FILENAME VARCHAR2(300 BYTE),
  FILESYSTEM_NAME   VARCHAR2(40 BYTE),
  UPLOAD_NO         NUMBER,
  CONSTRAINT PK_FILE PRIMARY KEY(FILE_NO),
  CONSTRAINT FK_FILE_UPLOAD FOREIGN KEY(UPLOAD_NO)
    REFERENCES UPLOAD_T(UPLOAD_NO)
      ON DELETE CASCADE
);

SELECT U.UPLOAD_NO, u.UPLOADER, count(f.file_no) As file_cnt -- count(file.no) 별명 file_cnt
  FROM UPLOAD_T  U left JOIN FILE_T F
  ON u.UPLOAD_NO = f.upload_no
  group by u.upload_no, u.UPLOADER; -- group by 절에 명시된 칼럼만 select절에서 조회할 수 있다.

-- inner join : upload_t와 file_t 에 모두 존재해야만 조회된다.
-- left upload 에 존재하면 file_t에 없어도 조회한다.
--group by upload_no , uploader 
